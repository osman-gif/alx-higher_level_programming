>>> im = __import__("2-matrix_divided")
>>> im.matrix_divided([[1,2],[3,4]], 1)
[[1.0, 2.0], [3.0, 4.0]]
>>> im.matrix_divided([[1,2],[3,4]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> im.matrix_divided([[1,2],[3,4]], 1)
[[1.0, 2.0], [3.0, 4.0]]
>>> im.matrix_divided([[1,2],[3,4]], "2")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/ajang/Python_alx/0x07-python-test_driven_development/2-matrix_divided.py", line 10, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> im.matrix_divided([[1,2],[3,4]], 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/ajang/Python_alx/0x07-python-test_driven_development/2-matrix_divided.py", line 12, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> im.matrix_divided([[1,2],[3,"0"]], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/ajang/Python_alx/0x07-python-test_driven_development/2-matrix_divided.py", line 23, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> im.matrix_divided([[1,2],(3,4)], 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/ajang/Python_alx/0x07-python-test_driven_development/2-matrix_divided.py", line 23, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats